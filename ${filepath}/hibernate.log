[DEBUG] 2018-02-11 02:25:29.099 [main] IntegratorServiceImpl - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
[DEBUG] 2018-02-11 02:25:29.106 [main] IntegratorServiceImpl - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
[DEBUG] 2018-02-11 02:25:29.113 [main] IntegratorServiceImpl - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
[INFO ] 2018-02-11 02:25:29.236 [main] Version - HHH000412: Hibernate Core {5.2.12.Final}
[INFO ] 2018-02-11 02:25:29.238 [main] Environment - HHH000206: hibernate.properties not found
[DEBUG] 2018-02-11 02:25:29.300 [main] LocalXmlResourceResolver - Interpreting public/system identifier : [-//Hibernate/Hibernate Configuration DTD//EN] - [http://www.hibernate.org/dtd/hibernate-configuration-3.0.dtd]
[DEBUG] 2018-02-11 02:25:29.302 [main] LocalXmlResourceResolver - Recognized hibernate-configuration identifier; attempting to resolve on classpath under org/hibernate/
[DEBUG] 2018-02-11 02:25:29.310 [main] JaxbCfgProcessor - cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
[DEBUG] 2018-02-11 02:25:29.648 [main] ServiceBinding - Overriding existing service binding [org.hibernate.secure.spi.JaccService]
[DEBUG] 2018-02-11 02:25:29.685 [main] RegionFactoryInitiator - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
[INFO ] 2018-02-11 02:25:29.696 [main] Version - HCANN000001: Hibernate Commons Annotations {5.0.1.Final}
[DEBUG] 2018-02-11 02:25:29.728 [main] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@2d9caaeb
[DEBUG] 2018-02-11 02:25:29.728 [main] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@2d9caaeb
[DEBUG] 2018-02-11 02:25:29.729 [main] BasicTypeRegistry - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@2d9caaeb
[DEBUG] 2018-02-11 02:25:29.730 [main] BasicTypeRegistry - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@27508c5d
[DEBUG] 2018-02-11 02:25:29.732 [main] BasicTypeRegistry - Adding type registration true_false -> org.hibernate.type.TrueFalseType@404bbcbd
[DEBUG] 2018-02-11 02:25:29.734 [main] BasicTypeRegistry - Adding type registration yes_no -> org.hibernate.type.YesNoType@6986852
[DEBUG] 2018-02-11 02:25:29.736 [main] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@421e361
[DEBUG] 2018-02-11 02:25:29.736 [main] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@421e361
[DEBUG] 2018-02-11 02:25:29.736 [main] BasicTypeRegistry - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@421e361
[DEBUG] 2018-02-11 02:25:29.738 [main] BasicTypeRegistry - Adding type registration character -> org.hibernate.type.CharacterType@4b34fff9
[DEBUG] 2018-02-11 02:25:29.738 [main] BasicTypeRegistry - Adding type registration char -> org.hibernate.type.CharacterType@4b34fff9
[DEBUG] 2018-02-11 02:25:29.738 [main] BasicTypeRegistry - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@4b34fff9
[DEBUG] 2018-02-11 02:25:29.740 [main] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@6d7fc27
[DEBUG] 2018-02-11 02:25:29.741 [main] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@6d7fc27
[DEBUG] 2018-02-11 02:25:29.741 [main] BasicTypeRegistry - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@6d7fc27
[DEBUG] 2018-02-11 02:25:29.743 [main] BasicTypeRegistry - Adding type registration integer -> org.hibernate.type.IntegerType@4f74980d
[DEBUG] 2018-02-11 02:25:29.743 [main] BasicTypeRegistry - Adding type registration int -> org.hibernate.type.IntegerType@4f74980d
[DEBUG] 2018-02-11 02:25:29.743 [main] BasicTypeRegistry - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@4f74980d
[DEBUG] 2018-02-11 02:25:29.745 [main] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@68f1b17f
[DEBUG] 2018-02-11 02:25:29.745 [main] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@68f1b17f
[DEBUG] 2018-02-11 02:25:29.745 [main] BasicTypeRegistry - Adding type registration java.lang.Long -> org.hibernate.type.LongType@68f1b17f
[DEBUG] 2018-02-11 02:25:29.746 [main] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@4fbe37eb
[DEBUG] 2018-02-11 02:25:29.747 [main] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@4fbe37eb
[DEBUG] 2018-02-11 02:25:29.747 [main] BasicTypeRegistry - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@4fbe37eb
[DEBUG] 2018-02-11 02:25:29.748 [main] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@7c51f34b
[DEBUG] 2018-02-11 02:25:29.748 [main] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@7c51f34b
[DEBUG] 2018-02-11 02:25:29.748 [main] BasicTypeRegistry - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@7c51f34b
[DEBUG] 2018-02-11 02:25:29.751 [main] BasicTypeRegistry - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@1205bd62
[DEBUG] 2018-02-11 02:25:29.751 [main] BasicTypeRegistry - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@1205bd62
[DEBUG] 2018-02-11 02:25:29.754 [main] BasicTypeRegistry - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@31920ade
[DEBUG] 2018-02-11 02:25:29.755 [main] BasicTypeRegistry - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@31920ade
[DEBUG] 2018-02-11 02:25:29.757 [main] BasicTypeRegistry - Adding type registration string -> org.hibernate.type.StringType@55cf0d14
[DEBUG] 2018-02-11 02:25:29.757 [main] BasicTypeRegistry - Adding type registration java.lang.String -> org.hibernate.type.StringType@55cf0d14
[DEBUG] 2018-02-11 02:25:29.760 [main] BasicTypeRegistry - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@1fd14d74
[DEBUG] 2018-02-11 02:25:29.762 [main] BasicTypeRegistry - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@1ae8bcbc
[DEBUG] 2018-02-11 02:25:29.764 [main] BasicTypeRegistry - Adding type registration url -> org.hibernate.type.UrlType@6d026701
[DEBUG] 2018-02-11 02:25:29.764 [main] BasicTypeRegistry - Adding type registration java.net.URL -> org.hibernate.type.UrlType@6d026701
[DEBUG] 2018-02-11 02:25:29.765 [main] BasicTypeRegistry - Adding type registration Duration -> org.hibernate.type.DurationType@6304101a
[DEBUG] 2018-02-11 02:25:29.766 [main] BasicTypeRegistry - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@6304101a
[DEBUG] 2018-02-11 02:25:29.784 [main] BasicTypeRegistry - Adding type registration Instant -> org.hibernate.type.InstantType@68f4865
[DEBUG] 2018-02-11 02:25:29.784 [main] BasicTypeRegistry - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@68f4865
[DEBUG] 2018-02-11 02:25:29.786 [main] BasicTypeRegistry - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@45d2ade3
[DEBUG] 2018-02-11 02:25:29.786 [main] BasicTypeRegistry - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@45d2ade3
[DEBUG] 2018-02-11 02:25:29.788 [main] BasicTypeRegistry - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@1bae316d
[DEBUG] 2018-02-11 02:25:29.788 [main] BasicTypeRegistry - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@1bae316d
[DEBUG] 2018-02-11 02:25:29.791 [main] BasicTypeRegistry - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@11f0a5a1
[DEBUG] 2018-02-11 02:25:29.791 [main] BasicTypeRegistry - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@11f0a5a1
[DEBUG] 2018-02-11 02:25:29.794 [main] BasicTypeRegistry - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@6bf08014
[DEBUG] 2018-02-11 02:25:29.794 [main] BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@6bf08014
[DEBUG] 2018-02-11 02:25:29.796 [main] BasicTypeRegistry - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@5a5338df
[DEBUG] 2018-02-11 02:25:29.796 [main] BasicTypeRegistry - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@5a5338df
[DEBUG] 2018-02-11 02:25:29.802 [main] BasicTypeRegistry - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@282cb7c7
[DEBUG] 2018-02-11 02:25:29.803 [main] BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@282cb7c7
[DEBUG] 2018-02-11 02:25:29.805 [main] BasicTypeRegistry - Adding type registration date -> org.hibernate.type.DateType@176b75f7
[DEBUG] 2018-02-11 02:25:29.806 [main] BasicTypeRegistry - Adding type registration java.sql.Date -> org.hibernate.type.DateType@176b75f7
[DEBUG] 2018-02-11 02:25:29.808 [main] BasicTypeRegistry - Adding type registration time -> org.hibernate.type.TimeType@3b8f0a79
[DEBUG] 2018-02-11 02:25:29.808 [main] BasicTypeRegistry - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@3b8f0a79
[DEBUG] 2018-02-11 02:25:29.812 [main] BasicTypeRegistry - Adding type registration timestamp -> org.hibernate.type.TimestampType@7b8b43c7
[DEBUG] 2018-02-11 02:25:29.812 [main] BasicTypeRegistry - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@7b8b43c7
[DEBUG] 2018-02-11 02:25:29.812 [main] BasicTypeRegistry - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@7b8b43c7
[DEBUG] 2018-02-11 02:25:29.814 [main] BasicTypeRegistry - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@41005828
[DEBUG] 2018-02-11 02:25:29.817 [main] BasicTypeRegistry - Adding type registration calendar -> org.hibernate.type.CalendarType@41294f8
[DEBUG] 2018-02-11 02:25:29.817 [main] BasicTypeRegistry - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@41294f8
[DEBUG] 2018-02-11 02:25:29.817 [main] BasicTypeRegistry - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@41294f8
[DEBUG] 2018-02-11 02:25:29.818 [main] BasicTypeRegistry - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@573906eb
[DEBUG] 2018-02-11 02:25:29.820 [main] BasicTypeRegistry - Adding type registration locale -> org.hibernate.type.LocaleType@68dc098b
[DEBUG] 2018-02-11 02:25:29.820 [main] BasicTypeRegistry - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@68dc098b
[DEBUG] 2018-02-11 02:25:29.822 [main] BasicTypeRegistry - Adding type registration currency -> org.hibernate.type.CurrencyType@4e423aa2
[DEBUG] 2018-02-11 02:25:29.822 [main] BasicTypeRegistry - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@4e423aa2
[DEBUG] 2018-02-11 02:25:29.824 [main] BasicTypeRegistry - Adding type registration timezone -> org.hibernate.type.TimeZoneType@7ceb3185
[DEBUG] 2018-02-11 02:25:29.824 [main] BasicTypeRegistry - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@7ceb3185
[DEBUG] 2018-02-11 02:25:29.826 [main] BasicTypeRegistry - Adding type registration class -> org.hibernate.type.ClassType@5b67bb7e
[DEBUG] 2018-02-11 02:25:29.826 [main] BasicTypeRegistry - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@5b67bb7e
[DEBUG] 2018-02-11 02:25:29.829 [main] BasicTypeRegistry - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@1bd39d3c
[DEBUG] 2018-02-11 02:25:29.829 [main] BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@1bd39d3c
[DEBUG] 2018-02-11 02:25:29.830 [main] BasicTypeRegistry - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@71329995
[DEBUG] 2018-02-11 02:25:29.832 [main] BasicTypeRegistry - Adding type registration binary -> org.hibernate.type.BinaryType@4ddbbdf8
[DEBUG] 2018-02-11 02:25:29.832 [main] BasicTypeRegistry - Adding type registration byte[] -> org.hibernate.type.BinaryType@4ddbbdf8
[DEBUG] 2018-02-11 02:25:29.832 [main] BasicTypeRegistry - Adding type registration [B -> org.hibernate.type.BinaryType@4ddbbdf8
[DEBUG] 2018-02-11 02:25:29.834 [main] BasicTypeRegistry - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@1115ec15
[DEBUG] 2018-02-11 02:25:29.834 [main] BasicTypeRegistry - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@1115ec15
[DEBUG] 2018-02-11 02:25:29.835 [main] BasicTypeRegistry - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@1115ec15
[DEBUG] 2018-02-11 02:25:29.837 [main] BasicTypeRegistry - Adding type registration row_version -> org.hibernate.type.RowVersionType@79dc5318
[DEBUG] 2018-02-11 02:25:29.838 [main] BasicTypeRegistry - Adding type registration image -> org.hibernate.type.ImageType@54eb2b70
[DEBUG] 2018-02-11 02:25:29.840 [main] BasicTypeRegistry - Adding type registration characters -> org.hibernate.type.CharArrayType@73302995
[DEBUG] 2018-02-11 02:25:29.840 [main] BasicTypeRegistry - Adding type registration char[] -> org.hibernate.type.CharArrayType@73302995
[DEBUG] 2018-02-11 02:25:29.840 [main] BasicTypeRegistry - Adding type registration [C -> org.hibernate.type.CharArrayType@73302995
[DEBUG] 2018-02-11 02:25:29.842 [main] BasicTypeRegistry - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@51133c06
[DEBUG] 2018-02-11 02:25:29.842 [main] BasicTypeRegistry - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@51133c06
[DEBUG] 2018-02-11 02:25:29.842 [main] BasicTypeRegistry - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@51133c06
[DEBUG] 2018-02-11 02:25:29.843 [main] BasicTypeRegistry - Adding type registration text -> org.hibernate.type.TextType@44d52de2
[DEBUG] 2018-02-11 02:25:29.845 [main] BasicTypeRegistry - Adding type registration ntext -> org.hibernate.type.NTextType@babafc2
[DEBUG] 2018-02-11 02:25:29.853 [main] BasicTypeRegistry - Adding type registration blob -> org.hibernate.type.BlobType@16eccb2e
[DEBUG] 2018-02-11 02:25:29.853 [main] BasicTypeRegistry - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@16eccb2e
[DEBUG] 2018-02-11 02:25:29.855 [main] BasicTypeRegistry - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@36b4091c
[DEBUG] 2018-02-11 02:25:29.863 [main] BasicTypeRegistry - Adding type registration clob -> org.hibernate.type.ClobType@65b104b9
[DEBUG] 2018-02-11 02:25:29.863 [main] BasicTypeRegistry - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@65b104b9
[DEBUG] 2018-02-11 02:25:29.870 [main] BasicTypeRegistry - Adding type registration nclob -> org.hibernate.type.NClobType@2421cc4
[DEBUG] 2018-02-11 02:25:29.870 [main] BasicTypeRegistry - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@2421cc4
[DEBUG] 2018-02-11 02:25:29.871 [main] BasicTypeRegistry - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@338c99c8
[DEBUG] 2018-02-11 02:25:29.872 [main] BasicTypeRegistry - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@172b013
[DEBUG] 2018-02-11 02:25:29.874 [main] BasicTypeRegistry - Adding type registration serializable -> org.hibernate.type.SerializableType@51fadaff
[DEBUG] 2018-02-11 02:25:29.879 [main] BasicTypeRegistry - Adding type registration object -> org.hibernate.type.ObjectType@600b90df
[DEBUG] 2018-02-11 02:25:29.879 [main] BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@600b90df
[DEBUG] 2018-02-11 02:25:29.880 [main] BasicTypeRegistry - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@5c2375a9
[DEBUG] 2018-02-11 02:25:29.880 [main] BasicTypeRegistry - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@60129b9a
[DEBUG] 2018-02-11 02:25:29.880 [main] BasicTypeRegistry - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@78d6692f
[DEBUG] 2018-02-11 02:25:29.880 [main] BasicTypeRegistry - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@7a55af6b
[DEBUG] 2018-02-11 02:25:29.880 [main] BasicTypeRegistry - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@3d9c13b5
[DEBUG] 2018-02-11 02:25:29.880 [main] BasicTypeRegistry - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@492691d7
[DEBUG] 2018-02-11 02:25:29.880 [main] BasicTypeRegistry - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@27216cd
[DEBUG] 2018-02-11 02:25:29.880 [main] BasicTypeRegistry - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@558bdf1f
[INFO ] 2018-02-11 02:25:29.893 [main] C3P0ConnectionProvider - HHH010002: C3P0 using driver: com.mysql.jdbc.Driver at URL: jdbc:mysql://localhost:3306/test_concertPlanner
[INFO ] 2018-02-11 02:25:29.893 [main] C3P0ConnectionProvider - HHH10001001: Connection properties: {user=root, password=****}
[INFO ] 2018-02-11 02:25:29.894 [main] C3P0ConnectionProvider - HHH10001003: Autocommit mode: false
[INFO ] 2018-02-11 02:25:30.084 [main] C3P0ConnectionProvider - HHH10001007: JDBC isolation level: <unknown>
[DEBUG] 2018-02-11 02:25:30.182 [main] JdbcEnvironmentInitiator - Database ->
       name : MySQL
    version : 5.7.20
      major : 5
      minor : 7
[DEBUG] 2018-02-11 02:25:30.182 [main] JdbcEnvironmentInitiator - Driver ->
       name : MySQL Connector Java
    version : mysql-connector-java-5.1.39 ( Revision: 3289a357af6d09ecc1a10fd3c26e95183e5790ad )
      major : 5
      minor : 1
[DEBUG] 2018-02-11 02:25:30.183 [main] JdbcEnvironmentInitiator - JDBC version : 4.0
[INFO ] 2018-02-11 02:25:30.203 [main] Dialect - HHH000400: Using dialect: org.hibernate.dialect.MySQL5Dialect
[DEBUG] 2018-02-11 02:25:30.265 [main] IdentifierHelperBuilder - JDBC driver metadata reported database stores quoted identifiers in more than one case
[DEBUG] 2018-02-11 02:25:30.268 [main] IdentifierHelperBuilder - IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [MIXED]; that will likely lead to problems in schema update and validation if using quoted identifiers
[DEBUG] 2018-02-11 02:25:30.358 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
[DEBUG] 2018-02-11 02:25:30.359 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
[DEBUG] 2018-02-11 02:25:30.361 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
[DEBUG] 2018-02-11 02:25:30.361 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
[DEBUG] 2018-02-11 02:25:30.363 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
[DEBUG] 2018-02-11 02:25:30.365 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
[DEBUG] 2018-02-11 02:25:30.366 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
[DEBUG] 2018-02-11 02:25:30.369 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[DEBUG] 2018-02-11 02:25:30.370 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
[DEBUG] 2018-02-11 02:25:30.371 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
[DEBUG] 2018-02-11 02:25:30.372 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
[DEBUG] 2018-02-11 02:25:30.372 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
[DEBUG] 2018-02-11 02:25:30.373 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[DEBUG] 2018-02-11 02:25:30.374 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
[DEBUG] 2018-02-11 02:25:30.426 [main] Namespace - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
[DEBUG] 2018-02-11 02:25:30.460 [main] AnnotationBinder - Binding entity from annotated class: entity.Nationality
[DEBUG] 2018-02-11 02:25:30.490 [main] Ejb3Column - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[DEBUG] 2018-02-11 02:25:30.499 [main] EntityBinder - Import with entity name Nationality
[DEBUG] 2018-02-11 02:25:30.504 [main] EntityBinder - Bind entity entity.Nationality on table Nationality
[DEBUG] 2018-02-11 02:25:30.545 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Nationality), mappingColumn=id, insertable=true, updatable=true, unique=false}
[DEBUG] 2018-02-11 02:25:30.549 [main] PropertyBinder - MetadataSourceProcessor property id with lazy=false
[DEBUG] 2018-02-11 02:25:30.551 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [entity.Nationality:id]
[DEBUG] 2018-02-11 02:25:30.552 [main] SimpleValueBinder - building SimpleValue for id
[DEBUG] 2018-02-11 02:25:30.554 [main] PropertyBinder - Building property id
[DEBUG] 2018-02-11 02:25:30.560 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Nationality), mappingColumn=nationality, insertable=true, updatable=true, unique=false}
[DEBUG] 2018-02-11 02:25:30.560 [main] PropertyBinder - MetadataSourceProcessor property nationality with lazy=false
[DEBUG] 2018-02-11 02:25:30.560 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [entity.Nationality:nationality]
[DEBUG] 2018-02-11 02:25:30.560 [main] SimpleValueBinder - building SimpleValue for nationality
[DEBUG] 2018-02-11 02:25:30.560 [main] PropertyBinder - Building property nationality
[DEBUG] 2018-02-11 02:25:30.562 [main] AnnotationBinder - Binding entity from annotated class: entity.Musician
[DEBUG] 2018-02-11 02:25:30.562 [main] Ejb3Column - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[DEBUG] 2018-02-11 02:25:30.562 [main] EntityBinder - Import with entity name Musician
[DEBUG] 2018-02-11 02:25:30.562 [main] EntityBinder - Bind entity entity.Musician on table Musician
[DEBUG] 2018-02-11 02:25:30.565 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Musician), mappingColumn=id, insertable=true, updatable=true, unique=false}
[DEBUG] 2018-02-11 02:25:30.565 [main] PropertyBinder - MetadataSourceProcessor property id with lazy=false
[DEBUG] 2018-02-11 02:25:30.565 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [entity.Musician:id]
[DEBUG] 2018-02-11 02:25:30.565 [main] SimpleValueBinder - building SimpleValue for id
[DEBUG] 2018-02-11 02:25:30.565 [main] PropertyBinder - Building property id
[DEBUG] 2018-02-11 02:25:30.566 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Musician), mappingColumn=first_name, insertable=true, updatable=true, unique=false}
[DEBUG] 2018-02-11 02:25:30.566 [main] PropertyBinder - MetadataSourceProcessor property firstName with lazy=false
[DEBUG] 2018-02-11 02:25:30.566 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [entity.Musician:firstName]
[DEBUG] 2018-02-11 02:25:30.566 [main] SimpleValueBinder - building SimpleValue for firstName
[DEBUG] 2018-02-11 02:25:30.566 [main] PropertyBinder - Building property firstName
[DEBUG] 2018-02-11 02:25:30.566 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Musician), mappingColumn=last_name, insertable=true, updatable=true, unique=false}
[DEBUG] 2018-02-11 02:25:30.567 [main] PropertyBinder - MetadataSourceProcessor property lastName with lazy=false
[DEBUG] 2018-02-11 02:25:30.567 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [entity.Musician:lastName]
[DEBUG] 2018-02-11 02:25:30.567 [main] SimpleValueBinder - building SimpleValue for lastName
[DEBUG] 2018-02-11 02:25:30.567 [main] PropertyBinder - Building property lastName
[DEBUG] 2018-02-11 02:25:30.567 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Musician), mappingColumn=phone_number, insertable=true, updatable=true, unique=false}
[DEBUG] 2018-02-11 02:25:30.568 [main] PropertyBinder - MetadataSourceProcessor property phoneNumber with lazy=false
[DEBUG] 2018-02-11 02:25:30.568 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [entity.Musician:phoneNumber]
[DEBUG] 2018-02-11 02:25:30.568 [main] SimpleValueBinder - building SimpleValue for phoneNumber
[DEBUG] 2018-02-11 02:25:30.568 [main] PropertyBinder - Building property phoneNumber
[DEBUG] 2018-02-11 02:25:30.569 [main] SimpleValueBinder - Starting fillSimpleValue for id
[DEBUG] 2018-02-11 02:25:30.570 [main] SimpleValueBinder - Starting fillSimpleValue for nationality
[DEBUG] 2018-02-11 02:25:30.570 [main] SimpleValueBinder - Starting fillSimpleValue for id
[DEBUG] 2018-02-11 02:25:30.570 [main] SimpleValueBinder - Starting fillSimpleValue for firstName
[DEBUG] 2018-02-11 02:25:30.570 [main] SimpleValueBinder - Starting fillSimpleValue for lastName
[DEBUG] 2018-02-11 02:25:30.570 [main] SimpleValueBinder - Starting fillSimpleValue for phoneNumber
[DEBUG] 2018-02-11 02:25:30.572 [main] PrimaryKey - Forcing column [id] to be non-null as it is part of the primary key for table [nationality]
[DEBUG] 2018-02-11 02:25:30.572 [main] PrimaryKey - Forcing column [id] to be non-null as it is part of the primary key for table [musician]
[DEBUG] 2018-02-11 02:25:30.615 [main] SessionFactoryImpl - Building session factory
[DEBUG] 2018-02-11 02:25:30.617 [main] Settings - SessionFactory name : null
[DEBUG] 2018-02-11 02:25:30.617 [main] Settings - Automatic flush during beforeCompletion(): enabled
[DEBUG] 2018-02-11 02:25:30.617 [main] Settings - Automatic session close at end of transaction: disabled
[DEBUG] 2018-02-11 02:25:30.617 [main] Settings - Statistics: disabled
[DEBUG] 2018-02-11 02:25:30.617 [main] Settings - Deleted entity synthetic identifier rollback: disabled
[DEBUG] 2018-02-11 02:25:30.617 [main] Settings - Default entity-mode: pojo
[DEBUG] 2018-02-11 02:25:30.617 [main] Settings - Check Nullability in Core (should be disabled when Bean Validation is on): enabled
[DEBUG] 2018-02-11 02:25:30.617 [main] Settings - Allow initialization of lazy state outside session : disabled
[DEBUG] 2018-02-11 02:25:30.617 [main] Settings - Using BatchFetchStyle : LEGACY
[DEBUG] 2018-02-11 02:25:30.618 [main] Settings - Default batch fetch size: -1
[DEBUG] 2018-02-11 02:25:30.618 [main] Settings - Maximum outer join fetch depth: 2
[DEBUG] 2018-02-11 02:25:30.618 [main] Settings - Default null ordering: NONE
[DEBUG] 2018-02-11 02:25:30.618 [main] Settings - Order SQL updates by primary key: disabled
[DEBUG] 2018-02-11 02:25:30.618 [main] Settings - Order SQL inserts for batching: disabled
[DEBUG] 2018-02-11 02:25:30.618 [main] Settings - multi-tenancy strategy : NONE
[DEBUG] 2018-02-11 02:25:30.618 [main] Settings - JTA Track by Thread: enabled
[DEBUG] 2018-02-11 02:25:30.618 [main] Settings - Query language substitutions: {}
[DEBUG] 2018-02-11 02:25:30.618 [main] Settings - JPA query language strict compliance: disabled
[DEBUG] 2018-02-11 02:25:30.618 [main] Settings - Named query checking : enabled
[DEBUG] 2018-02-11 02:25:30.618 [main] Settings - Second-level cache: enabled
[DEBUG] 2018-02-11 02:25:30.618 [main] Settings - Second-level query cache: disabled
[DEBUG] 2018-02-11 02:25:30.619 [main] Settings - Second-level query cache factory: org.hibernate.cache.internal.StandardQueryCacheFactory@3bffddff
[DEBUG] 2018-02-11 02:25:30.619 [main] Settings - Second-level cache region prefix: null
[DEBUG] 2018-02-11 02:25:30.619 [main] Settings - Optimize second-level cache for minimal puts: disabled
[DEBUG] 2018-02-11 02:25:30.619 [main] Settings - Structured second-level cache entries: disabled
[DEBUG] 2018-02-11 02:25:30.619 [main] Settings - Second-level cache direct-reference entries: disabled
[DEBUG] 2018-02-11 02:25:30.619 [main] Settings - Automatic eviction of collection cache: disabled
[DEBUG] 2018-02-11 02:25:30.619 [main] Settings - JDBC batch size: 15
[DEBUG] 2018-02-11 02:25:30.619 [main] Settings - JDBC batch updates for versioned data: enabled
[DEBUG] 2018-02-11 02:25:30.619 [main] Settings - Scrollable result sets: enabled
[DEBUG] 2018-02-11 02:25:30.619 [main] Settings - Wrap result sets: disabled
[DEBUG] 2018-02-11 02:25:30.620 [main] Settings - JDBC3 getGeneratedKeys(): enabled
[DEBUG] 2018-02-11 02:25:30.620 [main] Settings - JDBC result set fetch size: null
[DEBUG] 2018-02-11 02:25:30.620 [main] Settings - Connection release mode: AFTER_TRANSACTION
[DEBUG] 2018-02-11 02:25:30.620 [main] Settings - Generate SQL with comments: disabled
[DEBUG] 2018-02-11 02:25:30.698 [main] SessionFactoryImpl - Session factory constructed with filter configurations : {}
[DEBUG] 2018-02-11 02:25:30.698 [main] SessionFactoryImpl - Instantiating session factory with properties: {gopherProxySet=false, awt.toolkit=sun.lwawt.macosx.LWCToolkit, file.encoding.pkg=sun.io, java.specification.version=1.8, hibernate.c3p0.idle_test_period=3000, sun.cpu.isalist=, sun.jnu.encoding=UTF-8, hibernate.c3p0.min_size=5, java.class.path=/Applications/IntelliJ IDEA.app/Contents/lib/idea_rt.jar:/Applications/IntelliJ IDEA.app/Contents/plugins/junit/lib/junit-rt.jar:/Applications/IntelliJ IDEA.app/Contents/plugins/junit/lib/junit5-rt.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_151.jdk/Contents/Home/jre/lib/charsets.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_151.jdk/Contents/Home/jre/lib/deploy.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_151.jdk/Contents/Home/jre/lib/ext/cldrdata.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_151.jdk/Contents/Home/jre/lib/ext/dnsns.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_151.jdk/Contents/Home/jre/lib/ext/jaccess.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_151.jdk/Contents/Home/jre/lib/ext/jfxrt.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_151.jdk/Contents/Home/jre/lib/ext/localedata.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_151.jdk/Contents/Home/jre/lib/ext/nashorn.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_151.jdk/Contents/Home/jre/lib/ext/sunec.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_151.jdk/Contents/Home/jre/lib/ext/sunjce_provider.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_151.jdk/Contents/Home/jre/lib/ext/sunpkcs11.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_151.jdk/Contents/Home/jre/lib/ext/zipfs.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_151.jdk/Contents/Home/jre/lib/javaws.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_151.jdk/Contents/Home/jre/lib/jce.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_151.jdk/Contents/Home/jre/lib/jfr.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_151.jdk/Contents/Home/jre/lib/jfxswt.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_151.jdk/Contents/Home/jre/lib/jsse.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_151.jdk/Contents/Home/jre/lib/management-agent.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_151.jdk/Contents/Home/jre/lib/plugin.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_151.jdk/Contents/Home/jre/lib/resources.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_151.jdk/Contents/Home/jre/lib/rt.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_151.jdk/Contents/Home/lib/ant-javafx.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_151.jdk/Contents/Home/lib/dt.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_151.jdk/Contents/Home/lib/javafx-mx.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_151.jdk/Contents/Home/lib/jconsole.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_151.jdk/Contents/Home/lib/packager.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_151.jdk/Contents/Home/lib/sa-jdi.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_151.jdk/Contents/Home/lib/tools.jar:/Users/reneegrittner/IdeaProjects/concertPlanner/target/test-classes:/Users/reneegrittner/IdeaProjects/concertPlanner/target/classes:/Users/reneegrittner/.m2/repository/org/junit/jupiter/junit-jupiter-engine/5.0.0/junit-jupiter-engine-5.0.0.jar:/Users/reneegrittner/.m2/repository/org/apiguardian/apiguardian-api/1.0.0/apiguardian-api-1.0.0.jar:/Users/reneegrittner/.m2/repository/org/junit/platform/junit-platform-engine/1.0.0/junit-platform-engine-1.0.0.jar:/Users/reneegrittner/.m2/repository/org/junit/platform/junit-platform-commons/1.0.0/junit-platform-commons-1.0.0.jar:/Users/reneegrittner/.m2/repository/org/opentest4j/opentest4j/1.0.0/opentest4j-1.0.0.jar:/Users/reneegrittner/.m2/repository/org/junit/jupiter/junit-jupiter-api/5.0.0/junit-jupiter-api-5.0.0.jar:/Users/reneegrittner/.m2/repository/junit/junit/4.12/junit-4.12.jar:/Users/reneegrittner/.m2/repository/org/hamcrest/hamcrest-core/1.3/hamcrest-core-1.3.jar:/Users/reneegrittner/.m2/repository/org/junit/platform/junit-platform-runner/1.0.0/junit-platform-runner-1.0.0.jar:/Users/reneegrittner/.m2/repository/org/junit/platform/junit-platform-launcher/1.0.0/junit-platform-launcher-1.0.0.jar:/Users/reneegrittner/.m2/repository/org/junit/platform/junit-platform-suite-api/1.0.0/junit-platform-suite-api-1.0.0.jar:/Users/reneegrittner/.m2/repository/org/junit/vintage/junit-vintage-engine/4.12.0/junit-vintage-engine-4.12.0.jar:/Users/reneegrittner/.m2/repository/javax/javaee-web-api/7.0/javaee-web-api-7.0.jar:/Users/reneegrittner/.m2/repository/org/apache/logging/log4j/log4j-api/2.10.0/log4j-api-2.10.0.jar:/Users/reneegrittner/.m2/repository/org/apache/logging/log4j/log4j-core/2.10.0/log4j-core-2.10.0.jar:/Users/reneegrittner/.m2/repository/org/hibernate/hibernate-core/5.2.12.Final/hibernate-core-5.2.12.Final.jar:/Users/reneegrittner/.m2/repository/org/jboss/logging/jboss-logging/3.3.0.Final/jboss-logging-3.3.0.Final.jar:/Users/reneegrittner/.m2/repository/org/hibernate/javax/persistence/hibernate-jpa-2.1-api/1.0.0.Final/hibernate-jpa-2.1-api-1.0.0.Final.jar:/Users/reneegrittner/.m2/repository/org/javassist/javassist/3.20.0-GA/javassist-3.20.0-GA.jar:/Users/reneegrittner/.m2/repository/antlr/antlr/2.7.7/antlr-2.7.7.jar:/Users/reneegrittner/.m2/repository/org/jboss/spec/javax/transaction/jboss-transaction-api_1.2_spec/1.0.1.Final/jboss-transaction-api_1.2_spec-1.0.1.Final.jar:/Users/reneegrittner/.m2/repository/org/jboss/jandex/2.0.3.Final/jandex-2.0.3.Final.jar:/Users/reneegrittner/.m2/repository/com/fasterxml/classmate/1.3.0/classmate-1.3.0.jar:/Users/reneegrittner/.m2/repository/dom4j/dom4j/1.6.1/dom4j-1.6.1.jar:/Users/reneegrittner/.m2/repository/org/hibernate/common/hibernate-commons-annotations/5.0.1.Final/hibernate-commons-annotations-5.0.1.Final.jar:/Users/reneegrittner/.m2/repository/org/hibernate/hibernate-c3p0/5.2.12.Final/hibernate-c3p0-5.2.12.Final.jar:/Users/reneegrittner/.m2/repository/com/mchange/c3p0/0.9.5.2/c3p0-0.9.5.2.jar:/Users/reneegrittner/.m2/repository/com/mchange/mchange-commons-java/0.2.11/mchange-commons-java-0.2.11.jar:/Users/reneegrittner/.m2/repository/mysql/mysql-connector-java/5.1.39/mysql-connector-java-5.1.39.jar:/Users/reneegrittner/.m2/repository/jstl/jstl/1.2/jstl-1.2.jar:/Users/reneegrittner/Library/Caches/IntelliJIdea2017.3/coverageJars/coverage-agent.jar:/Applications/IntelliJ IDEA.app/Contents/lib/idea_rt.jar, java.vm.vendor=Oracle Corporation, sun.arch.data.model=64, idea.test.cyclic.buffer.size=1048576, java.vendor.url=http://java.oracle.com/, user.timezone=America/Chicago, os.name=Mac OS X, java.vm.specification.version=1.8, user.country=US, sun.java.launcher=SUN_STANDARD, sun.boot.library.path=/Library/Java/JavaVirtualMachines/jdk1.8.0_151.jdk/Contents/Home/jre/lib, sun.java.command=com.intellij.rt.execution.junit.JUnitStarter -ideVersion5 -junit5 persistence.MusicianDaoTest, http.nonProxyHosts=local|*.local|169.254/16|*.169.254/16, sun.cpu.endian=little, hibernate.c3p0.max_statements=50, user.home=/Users/reneegrittner, user.language=en, java.specification.vendor=Oracle Corporation, java.home=/Library/Java/JavaVirtualMachines/jdk1.8.0_151.jdk/Contents/Home/jre, file.separator=/, line.separator=
, hibernate.c3p0.timeout=300, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, java.awt.graphicsenv=sun.awt.CGraphicsEnvironment, sun.boot.class.path=/Library/Java/JavaVirtualMachines/jdk1.8.0_151.jdk/Contents/Home/jre/lib/resources.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_151.jdk/Contents/Home/jre/lib/rt.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_151.jdk/Contents/Home/jre/lib/sunrsasign.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_151.jdk/Contents/Home/jre/lib/jsse.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_151.jdk/Contents/Home/jre/lib/jce.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_151.jdk/Contents/Home/jre/lib/charsets.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_151.jdk/Contents/Home/jre/lib/jfr.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_151.jdk/Contents/Home/jre/classes:/Users/reneegrittner/Library/Caches/IntelliJIdea2017.3/coverageJars/coverage-agent.jar, connection.password=wreb7ce, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, hibernate.c3p0.max_size=20, ftp.nonProxyHosts=local|*.local|169.254/16|*.169.254/16, java.runtime.version=1.8.0_151-b12, user.name=reneegrittner, path.separator=:, hibernate.connection.username=root, os.version=10.13.3, java.endorsed.dirs=/Library/Java/JavaVirtualMachines/jdk1.8.0_151.jdk/Contents/Home/jre/lib/endorsed, java.runtime.name=Java(TM) SE Runtime Environment, hibernate.connection.url=jdbc:mysql://localhost:3306/test_concertPlanner, file.encoding=UTF-8, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, hibernate.connection.driver_class=com.mysql.jdbc.Driver, java.vendor.url.bug=http://bugreport.sun.com/bugreport/, java.io.tmpdir=/var/folders/cw/448f4z55699dhs8wrlljzz0h0000gn/T/, java.version=1.8.0_151, user.dir=/Users/reneegrittner/IdeaProjects/concertPlanner, os.arch=x86_64, connection.username=root, java.vm.specification.name=Java Virtual Machine Specification, hibernate.connection.password=****, java.awt.printerjob=sun.lwawt.macosx.CPrinterJob, sun.os.patch.level=unknown, connection.driver_class=com.mysql.jdbc.Driver, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@26b894bd, java.library.path=/Users/reneegrittner/Library/Java/Extensions:/Library/Java/Extensions:/Network/Library/Java/Extensions:/System/Library/Java/Extensions:/usr/lib/java:., java.vm.info=mixed mode, java.vendor=Oracle Corporation, java.vm.version=25.151-b12, hibernate.bytecode.use_reflection_optimizer=false, java.ext.dirs=/Users/reneegrittner/Library/Java/Extensions:/Library/Java/JavaVirtualMachines/jdk1.8.0_151.jdk/Contents/Home/jre/lib/ext:/Library/Java/Extensions:/Network/Library/Java/Extensions:/System/Library/Java/Extensions:/usr/lib/java, sun.io.unicode.encoding=UnicodeBig, connection.url=jdbc:mysql://localhost:3306/test_concertPlanner, java.class.version=52.0, socksNonProxyHosts=local|*.local|169.254/16|*.169.254/16}
[DEBUG] 2018-02-11 02:25:30.722 [main] TypeSafeActivator - Unable to acquire Bean Validation ValidatorFactory, skipping activation
[DEBUG] 2018-02-11 02:25:30.723 [main] JaccIntegrator - Skipping JACC integration as it was not enabled
[DEBUG] 2018-02-11 02:25:30.725 [main] SessionFactoryImpl - Instantiated session factory
[DEBUG] 2018-02-11 02:25:30.782 [main] ClassLoaderAccessImpl - Not known whether passed class name [entity.Nationality] is safe
[DEBUG] 2018-02-11 02:25:30.783 [main] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : entity.Nationality
[DEBUG] 2018-02-11 02:25:30.802 [main] ClassLoaderAccessImpl - Not known whether passed class name [entity.Nationality] is safe
[DEBUG] 2018-02-11 02:25:30.802 [main] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : entity.Nationality
[DEBUG] 2018-02-11 02:25:30.877 [main] ClassLoaderAccessImpl - Not known whether passed class name [entity.Musician] is safe
[DEBUG] 2018-02-11 02:25:30.878 [main] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : entity.Musician
[DEBUG] 2018-02-11 02:25:30.878 [main] ClassLoaderAccessImpl - Not known whether passed class name [entity.Musician] is safe
[DEBUG] 2018-02-11 02:25:30.878 [main] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : entity.Musician
[DEBUG] 2018-02-11 02:25:30.891 [main] AbstractEntityPersister - Static SQL for entity: entity.Nationality
[DEBUG] 2018-02-11 02:25:30.891 [main] AbstractEntityPersister -  Version select: select id from Nationality where id =?
[DEBUG] 2018-02-11 02:25:30.891 [main] AbstractEntityPersister -  Snapshot select: select nationalit_.id, nationalit_.nationality as national2_1_ from Nationality nationalit_ where nationalit_.id=?
[DEBUG] 2018-02-11 02:25:30.892 [main] AbstractEntityPersister -  Insert 0: insert into Nationality (nationality, id) values (?, ?)
[DEBUG] 2018-02-11 02:25:30.892 [main] AbstractEntityPersister -  Update 0: update Nationality set nationality=? where id=?
[DEBUG] 2018-02-11 02:25:30.892 [main] AbstractEntityPersister -  Delete 0: delete from Nationality where id=?
[DEBUG] 2018-02-11 02:25:30.892 [main] AbstractEntityPersister -  Identity insert: insert into Nationality (nationality) values (?)
[DEBUG] 2018-02-11 02:25:30.916 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4287d447]
[DEBUG] 2018-02-11 02:25:30.918 [main] MetamodelGraphWalker - Visiting attribute path : nationality
[DEBUG] 2018-02-11 02:25:30.918 [main] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2018-02-11 02:25:30.934 [main] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2018-02-11 02:25:30.939 [main] LoadPlanTreePrinter - LoadPlan(entity=entity.Nationality)
    - Returns
       - EntityReturnImpl(entity=entity.Nationality, querySpaceUid=<gen:0>, path=entity.Nationality)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=entity.Nationality)
          - SQL table alias mapping - nationalit0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}

[DEBUG] 2018-02-11 02:25:30.942 [main] EntityLoader - Static select for entity entity.Nationality [NONE]: select nationalit0_.id as id1_1_0_, nationalit0_.nationality as national2_1_0_ from Nationality nationalit0_ where nationalit0_.id=?
[DEBUG] 2018-02-11 02:25:30.943 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@60c16548]
[DEBUG] 2018-02-11 02:25:30.943 [main] MetamodelGraphWalker - Visiting attribute path : nationality
[DEBUG] 2018-02-11 02:25:30.943 [main] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2018-02-11 02:25:30.943 [main] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2018-02-11 02:25:30.944 [main] LoadPlanTreePrinter - LoadPlan(entity=entity.Nationality)
    - Returns
       - EntityReturnImpl(entity=entity.Nationality, querySpaceUid=<gen:0>, path=entity.Nationality)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=entity.Nationality)
          - SQL table alias mapping - nationalit0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}

[DEBUG] 2018-02-11 02:25:30.944 [main] EntityLoader - Static select for entity entity.Nationality [READ]: select nationalit0_.id as id1_1_0_, nationalit0_.nationality as national2_1_0_ from Nationality nationalit0_ where nationalit0_.id=?
[DEBUG] 2018-02-11 02:25:30.944 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@511816c0]
[DEBUG] 2018-02-11 02:25:30.944 [main] MetamodelGraphWalker - Visiting attribute path : nationality
[DEBUG] 2018-02-11 02:25:30.944 [main] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2018-02-11 02:25:30.944 [main] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2018-02-11 02:25:30.945 [main] LoadPlanTreePrinter - LoadPlan(entity=entity.Nationality)
    - Returns
       - EntityReturnImpl(entity=entity.Nationality, querySpaceUid=<gen:0>, path=entity.Nationality)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=entity.Nationality)
          - SQL table alias mapping - nationalit0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}

[DEBUG] 2018-02-11 02:25:30.945 [main] EntityLoader - Static select for entity entity.Nationality [UPGRADE]: select nationalit0_.id as id1_1_0_, nationalit0_.nationality as national2_1_0_ from Nationality nationalit0_ where nationalit0_.id=? for update
[DEBUG] 2018-02-11 02:25:30.945 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5339bbad]
[DEBUG] 2018-02-11 02:25:30.945 [main] MetamodelGraphWalker - Visiting attribute path : nationality
[DEBUG] 2018-02-11 02:25:30.945 [main] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2018-02-11 02:25:30.945 [main] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2018-02-11 02:25:30.946 [main] LoadPlanTreePrinter - LoadPlan(entity=entity.Nationality)
    - Returns
       - EntityReturnImpl(entity=entity.Nationality, querySpaceUid=<gen:0>, path=entity.Nationality)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=entity.Nationality)
          - SQL table alias mapping - nationalit0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}

[DEBUG] 2018-02-11 02:25:30.946 [main] EntityLoader - Static select for entity entity.Nationality [UPGRADE_NOWAIT]: select nationalit0_.id as id1_1_0_, nationalit0_.nationality as national2_1_0_ from Nationality nationalit0_ where nationalit0_.id=? for update
[DEBUG] 2018-02-11 02:25:30.946 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@288a4658]
[DEBUG] 2018-02-11 02:25:30.946 [main] MetamodelGraphWalker - Visiting attribute path : nationality
[DEBUG] 2018-02-11 02:25:30.946 [main] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2018-02-11 02:25:30.947 [main] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2018-02-11 02:25:30.947 [main] LoadPlanTreePrinter - LoadPlan(entity=entity.Nationality)
    - Returns
       - EntityReturnImpl(entity=entity.Nationality, querySpaceUid=<gen:0>, path=entity.Nationality)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=entity.Nationality)
          - SQL table alias mapping - nationalit0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}

[DEBUG] 2018-02-11 02:25:30.947 [main] EntityLoader - Static select for entity entity.Nationality [UPGRADE_SKIPLOCKED]: select nationalit0_.id as id1_1_0_, nationalit0_.nationality as national2_1_0_ from Nationality nationalit0_ where nationalit0_.id=? for update
[DEBUG] 2018-02-11 02:25:30.948 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@452c8a40]
[DEBUG] 2018-02-11 02:25:30.948 [main] MetamodelGraphWalker - Visiting attribute path : nationality
[DEBUG] 2018-02-11 02:25:30.948 [main] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2018-02-11 02:25:30.948 [main] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2018-02-11 02:25:30.949 [main] LoadPlanTreePrinter - LoadPlan(entity=entity.Nationality)
    - Returns
       - EntityReturnImpl(entity=entity.Nationality, querySpaceUid=<gen:0>, path=entity.Nationality)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=entity.Nationality)
          - SQL table alias mapping - nationalit0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}

[DEBUG] 2018-02-11 02:25:30.949 [main] EntityLoader - Static select for entity entity.Nationality [FORCE]: select nationalit0_.id as id1_1_0_, nationalit0_.nationality as national2_1_0_ from Nationality nationalit0_ where nationalit0_.id=? for update
[DEBUG] 2018-02-11 02:25:30.949 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@29006752]
[DEBUG] 2018-02-11 02:25:30.949 [main] MetamodelGraphWalker - Visiting attribute path : nationality
[DEBUG] 2018-02-11 02:25:30.949 [main] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2018-02-11 02:25:30.949 [main] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2018-02-11 02:25:30.950 [main] LoadPlanTreePrinter - LoadPlan(entity=entity.Nationality)
    - Returns
       - EntityReturnImpl(entity=entity.Nationality, querySpaceUid=<gen:0>, path=entity.Nationality)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=entity.Nationality)
          - SQL table alias mapping - nationalit0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}

[DEBUG] 2018-02-11 02:25:30.950 [main] EntityLoader - Static select for entity entity.Nationality [PESSIMISTIC_READ]: select nationalit0_.id as id1_1_0_, nationalit0_.nationality as national2_1_0_ from Nationality nationalit0_ where nationalit0_.id=? lock in share mode
[DEBUG] 2018-02-11 02:25:30.950 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@66d57c1b]
[DEBUG] 2018-02-11 02:25:30.950 [main] MetamodelGraphWalker - Visiting attribute path : nationality
[DEBUG] 2018-02-11 02:25:30.950 [main] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2018-02-11 02:25:30.950 [main] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2018-02-11 02:25:30.951 [main] LoadPlanTreePrinter - LoadPlan(entity=entity.Nationality)
    - Returns
       - EntityReturnImpl(entity=entity.Nationality, querySpaceUid=<gen:0>, path=entity.Nationality)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=entity.Nationality)
          - SQL table alias mapping - nationalit0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}

[DEBUG] 2018-02-11 02:25:30.951 [main] EntityLoader - Static select for entity entity.Nationality [PESSIMISTIC_WRITE]: select nationalit0_.id as id1_1_0_, nationalit0_.nationality as national2_1_0_ from Nationality nationalit0_ where nationalit0_.id=? for update
[DEBUG] 2018-02-11 02:25:30.951 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@d59970a]
[DEBUG] 2018-02-11 02:25:30.951 [main] MetamodelGraphWalker - Visiting attribute path : nationality
[DEBUG] 2018-02-11 02:25:30.951 [main] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2018-02-11 02:25:30.952 [main] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2018-02-11 02:25:30.952 [main] LoadPlanTreePrinter - LoadPlan(entity=entity.Nationality)
    - Returns
       - EntityReturnImpl(entity=entity.Nationality, querySpaceUid=<gen:0>, path=entity.Nationality)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=entity.Nationality)
          - SQL table alias mapping - nationalit0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}

[DEBUG] 2018-02-11 02:25:30.952 [main] EntityLoader - Static select for entity entity.Nationality [PESSIMISTIC_FORCE_INCREMENT]: select nationalit0_.id as id1_1_0_, nationalit0_.nationality as national2_1_0_ from Nationality nationalit0_ where nationalit0_.id=? for update
[DEBUG] 2018-02-11 02:25:30.952 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@53b98ff6]
[DEBUG] 2018-02-11 02:25:30.952 [main] MetamodelGraphWalker - Visiting attribute path : nationality
[DEBUG] 2018-02-11 02:25:30.953 [main] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2018-02-11 02:25:30.953 [main] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2018-02-11 02:25:30.953 [main] LoadPlanTreePrinter - LoadPlan(entity=entity.Nationality)
    - Returns
       - EntityReturnImpl(entity=entity.Nationality, querySpaceUid=<gen:0>, path=entity.Nationality)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=entity.Nationality)
          - SQL table alias mapping - nationalit0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}

[DEBUG] 2018-02-11 02:25:30.953 [main] EntityLoader - Static select for entity entity.Nationality [OPTIMISTIC]: select nationalit0_.id as id1_1_0_, nationalit0_.nationality as national2_1_0_ from Nationality nationalit0_ where nationalit0_.id=?
[DEBUG] 2018-02-11 02:25:30.954 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7fcff1b9]
[DEBUG] 2018-02-11 02:25:30.954 [main] MetamodelGraphWalker - Visiting attribute path : nationality
[DEBUG] 2018-02-11 02:25:30.954 [main] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2018-02-11 02:25:30.954 [main] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2018-02-11 02:25:30.955 [main] LoadPlanTreePrinter - LoadPlan(entity=entity.Nationality)
    - Returns
       - EntityReturnImpl(entity=entity.Nationality, querySpaceUid=<gen:0>, path=entity.Nationality)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=entity.Nationality)
          - SQL table alias mapping - nationalit0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}

[DEBUG] 2018-02-11 02:25:30.955 [main] EntityLoader - Static select for entity entity.Nationality [OPTIMISTIC_FORCE_INCREMENT]: select nationalit0_.id as id1_1_0_, nationalit0_.nationality as national2_1_0_ from Nationality nationalit0_ where nationalit0_.id=?
[DEBUG] 2018-02-11 02:25:30.976 [main] Loader - Static select for action ACTION_MERGE on entity entity.Nationality: select nationalit0_.id as id1_1_0_, nationalit0_.nationality as national2_1_0_ from Nationality nationalit0_ where nationalit0_.id=?
[DEBUG] 2018-02-11 02:25:30.977 [main] Loader - Static select for action ACTION_REFRESH on entity entity.Nationality: select nationalit0_.id as id1_1_0_, nationalit0_.nationality as national2_1_0_ from Nationality nationalit0_ where nationalit0_.id=?
[DEBUG] 2018-02-11 02:25:30.977 [main] AbstractEntityPersister - Static SQL for entity: entity.Musician
[DEBUG] 2018-02-11 02:25:30.977 [main] AbstractEntityPersister -  Version select: select id from Musician where id =?
[DEBUG] 2018-02-11 02:25:30.977 [main] AbstractEntityPersister -  Snapshot select: select musician_.id, musician_.first_name as first_na2_0_, musician_.last_name as last_nam3_0_, musician_.phone_number as phone_nu4_0_ from Musician musician_ where musician_.id=?
[DEBUG] 2018-02-11 02:25:30.978 [main] AbstractEntityPersister -  Insert 0: insert into Musician (first_name, last_name, phone_number, id) values (?, ?, ?, ?)
[DEBUG] 2018-02-11 02:25:30.978 [main] AbstractEntityPersister -  Update 0: update Musician set first_name=?, last_name=?, phone_number=? where id=?
[DEBUG] 2018-02-11 02:25:30.978 [main] AbstractEntityPersister -  Delete 0: delete from Musician where id=?
[DEBUG] 2018-02-11 02:25:30.978 [main] AbstractEntityPersister -  Identity insert: insert into Musician (first_name, last_name, phone_number) values (?, ?, ?)
[DEBUG] 2018-02-11 02:25:30.978 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3cc20577]
[DEBUG] 2018-02-11 02:25:30.978 [main] MetamodelGraphWalker - Visiting attribute path : firstName
[DEBUG] 2018-02-11 02:25:30.978 [main] MetamodelGraphWalker - Visiting attribute path : lastName
[DEBUG] 2018-02-11 02:25:30.979 [main] MetamodelGraphWalker - Visiting attribute path : phoneNumber
[DEBUG] 2018-02-11 02:25:30.979 [main] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2018-02-11 02:25:30.979 [main] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2018-02-11 02:25:30.979 [main] LoadPlanTreePrinter - LoadPlan(entity=entity.Musician)
    - Returns
       - EntityReturnImpl(entity=entity.Musician, querySpaceUid=<gen:0>, path=entity.Musician)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=entity.Musician)
          - SQL table alias mapping - musician0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

[DEBUG] 2018-02-11 02:25:30.979 [main] EntityLoader - Static select for entity entity.Musician [NONE]: select musician0_.id as id1_0_0_, musician0_.first_name as first_na2_0_0_, musician0_.last_name as last_nam3_0_0_, musician0_.phone_number as phone_nu4_0_0_ from Musician musician0_ where musician0_.id=?
[DEBUG] 2018-02-11 02:25:30.980 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@775594f2]
[DEBUG] 2018-02-11 02:25:30.980 [main] MetamodelGraphWalker - Visiting attribute path : firstName
[DEBUG] 2018-02-11 02:25:30.980 [main] MetamodelGraphWalker - Visiting attribute path : lastName
[DEBUG] 2018-02-11 02:25:30.980 [main] MetamodelGraphWalker - Visiting attribute path : phoneNumber
[DEBUG] 2018-02-11 02:25:30.980 [main] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2018-02-11 02:25:30.981 [main] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2018-02-11 02:25:30.981 [main] LoadPlanTreePrinter - LoadPlan(entity=entity.Musician)
    - Returns
       - EntityReturnImpl(entity=entity.Musician, querySpaceUid=<gen:0>, path=entity.Musician)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=entity.Musician)
          - SQL table alias mapping - musician0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

[DEBUG] 2018-02-11 02:25:30.981 [main] EntityLoader - Static select for entity entity.Musician [READ]: select musician0_.id as id1_0_0_, musician0_.first_name as first_na2_0_0_, musician0_.last_name as last_nam3_0_0_, musician0_.phone_number as phone_nu4_0_0_ from Musician musician0_ where musician0_.id=?
[DEBUG] 2018-02-11 02:25:30.981 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7b22ec89]
[DEBUG] 2018-02-11 02:25:30.981 [main] MetamodelGraphWalker - Visiting attribute path : firstName
[DEBUG] 2018-02-11 02:25:30.982 [main] MetamodelGraphWalker - Visiting attribute path : lastName
[DEBUG] 2018-02-11 02:25:30.982 [main] MetamodelGraphWalker - Visiting attribute path : phoneNumber
[DEBUG] 2018-02-11 02:25:30.982 [main] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2018-02-11 02:25:30.982 [main] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2018-02-11 02:25:30.982 [main] LoadPlanTreePrinter - LoadPlan(entity=entity.Musician)
    - Returns
       - EntityReturnImpl(entity=entity.Musician, querySpaceUid=<gen:0>, path=entity.Musician)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=entity.Musician)
          - SQL table alias mapping - musician0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

[DEBUG] 2018-02-11 02:25:30.982 [main] EntityLoader - Static select for entity entity.Musician [UPGRADE]: select musician0_.id as id1_0_0_, musician0_.first_name as first_na2_0_0_, musician0_.last_name as last_nam3_0_0_, musician0_.phone_number as phone_nu4_0_0_ from Musician musician0_ where musician0_.id=? for update
[DEBUG] 2018-02-11 02:25:30.983 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2228db21]
[DEBUG] 2018-02-11 02:25:30.983 [main] MetamodelGraphWalker - Visiting attribute path : firstName
[DEBUG] 2018-02-11 02:25:30.983 [main] MetamodelGraphWalker - Visiting attribute path : lastName
[DEBUG] 2018-02-11 02:25:30.983 [main] MetamodelGraphWalker - Visiting attribute path : phoneNumber
[DEBUG] 2018-02-11 02:25:30.984 [main] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2018-02-11 02:25:30.985 [main] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2018-02-11 02:25:30.986 [main] LoadPlanTreePrinter - LoadPlan(entity=entity.Musician)
    - Returns
       - EntityReturnImpl(entity=entity.Musician, querySpaceUid=<gen:0>, path=entity.Musician)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=entity.Musician)
          - SQL table alias mapping - musician0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

[DEBUG] 2018-02-11 02:25:30.986 [main] EntityLoader - Static select for entity entity.Musician [UPGRADE_NOWAIT]: select musician0_.id as id1_0_0_, musician0_.first_name as first_na2_0_0_, musician0_.last_name as last_nam3_0_0_, musician0_.phone_number as phone_nu4_0_0_ from Musician musician0_ where musician0_.id=? for update
[DEBUG] 2018-02-11 02:25:30.986 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@241a0c3a]
[DEBUG] 2018-02-11 02:25:30.986 [main] MetamodelGraphWalker - Visiting attribute path : firstName
[DEBUG] 2018-02-11 02:25:30.986 [main] MetamodelGraphWalker - Visiting attribute path : lastName
[DEBUG] 2018-02-11 02:25:30.986 [main] MetamodelGraphWalker - Visiting attribute path : phoneNumber
[DEBUG] 2018-02-11 02:25:30.987 [main] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2018-02-11 02:25:30.987 [main] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2018-02-11 02:25:30.988 [main] LoadPlanTreePrinter - LoadPlan(entity=entity.Musician)
    - Returns
       - EntityReturnImpl(entity=entity.Musician, querySpaceUid=<gen:0>, path=entity.Musician)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=entity.Musician)
          - SQL table alias mapping - musician0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

[DEBUG] 2018-02-11 02:25:30.988 [main] EntityLoader - Static select for entity entity.Musician [UPGRADE_SKIPLOCKED]: select musician0_.id as id1_0_0_, musician0_.first_name as first_na2_0_0_, musician0_.last_name as last_nam3_0_0_, musician0_.phone_number as phone_nu4_0_0_ from Musician musician0_ where musician0_.id=? for update
[DEBUG] 2018-02-11 02:25:30.988 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@30e92cb9]
[DEBUG] 2018-02-11 02:25:30.988 [main] MetamodelGraphWalker - Visiting attribute path : firstName
[DEBUG] 2018-02-11 02:25:30.988 [main] MetamodelGraphWalker - Visiting attribute path : lastName
[DEBUG] 2018-02-11 02:25:30.988 [main] MetamodelGraphWalker - Visiting attribute path : phoneNumber
[DEBUG] 2018-02-11 02:25:30.988 [main] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2018-02-11 02:25:30.989 [main] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2018-02-11 02:25:30.989 [main] LoadPlanTreePrinter - LoadPlan(entity=entity.Musician)
    - Returns
       - EntityReturnImpl(entity=entity.Musician, querySpaceUid=<gen:0>, path=entity.Musician)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=entity.Musician)
          - SQL table alias mapping - musician0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

[DEBUG] 2018-02-11 02:25:30.989 [main] EntityLoader - Static select for entity entity.Musician [FORCE]: select musician0_.id as id1_0_0_, musician0_.first_name as first_na2_0_0_, musician0_.last_name as last_nam3_0_0_, musician0_.phone_number as phone_nu4_0_0_ from Musician musician0_ where musician0_.id=? for update
[DEBUG] 2018-02-11 02:25:30.990 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@ba1f559]
[DEBUG] 2018-02-11 02:25:30.990 [main] MetamodelGraphWalker - Visiting attribute path : firstName
[DEBUG] 2018-02-11 02:25:30.990 [main] MetamodelGraphWalker - Visiting attribute path : lastName
[DEBUG] 2018-02-11 02:25:30.990 [main] MetamodelGraphWalker - Visiting attribute path : phoneNumber
[DEBUG] 2018-02-11 02:25:30.990 [main] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2018-02-11 02:25:30.990 [main] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2018-02-11 02:25:30.991 [main] LoadPlanTreePrinter - LoadPlan(entity=entity.Musician)
    - Returns
       - EntityReturnImpl(entity=entity.Musician, querySpaceUid=<gen:0>, path=entity.Musician)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=entity.Musician)
          - SQL table alias mapping - musician0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

[DEBUG] 2018-02-11 02:25:30.991 [main] EntityLoader - Static select for entity entity.Musician [PESSIMISTIC_READ]: select musician0_.id as id1_0_0_, musician0_.first_name as first_na2_0_0_, musician0_.last_name as last_nam3_0_0_, musician0_.phone_number as phone_nu4_0_0_ from Musician musician0_ where musician0_.id=? lock in share mode
[DEBUG] 2018-02-11 02:25:30.991 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@46baf579]
[DEBUG] 2018-02-11 02:25:30.991 [main] MetamodelGraphWalker - Visiting attribute path : firstName
[DEBUG] 2018-02-11 02:25:30.991 [main] MetamodelGraphWalker - Visiting attribute path : lastName
[DEBUG] 2018-02-11 02:25:30.991 [main] MetamodelGraphWalker - Visiting attribute path : phoneNumber
[DEBUG] 2018-02-11 02:25:30.991 [main] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2018-02-11 02:25:30.992 [main] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2018-02-11 02:25:30.992 [main] LoadPlanTreePrinter - LoadPlan(entity=entity.Musician)
    - Returns
       - EntityReturnImpl(entity=entity.Musician, querySpaceUid=<gen:0>, path=entity.Musician)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=entity.Musician)
          - SQL table alias mapping - musician0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

[DEBUG] 2018-02-11 02:25:30.992 [main] EntityLoader - Static select for entity entity.Musician [PESSIMISTIC_WRITE]: select musician0_.id as id1_0_0_, musician0_.first_name as first_na2_0_0_, musician0_.last_name as last_nam3_0_0_, musician0_.phone_number as phone_nu4_0_0_ from Musician musician0_ where musician0_.id=? for update
[DEBUG] 2018-02-11 02:25:30.992 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4f7c0be3]
[DEBUG] 2018-02-11 02:25:30.992 [main] MetamodelGraphWalker - Visiting attribute path : firstName
[DEBUG] 2018-02-11 02:25:30.993 [main] MetamodelGraphWalker - Visiting attribute path : lastName
[DEBUG] 2018-02-11 02:25:30.993 [main] MetamodelGraphWalker - Visiting attribute path : phoneNumber
[DEBUG] 2018-02-11 02:25:30.993 [main] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2018-02-11 02:25:30.993 [main] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2018-02-11 02:25:30.993 [main] LoadPlanTreePrinter - LoadPlan(entity=entity.Musician)
    - Returns
       - EntityReturnImpl(entity=entity.Musician, querySpaceUid=<gen:0>, path=entity.Musician)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=entity.Musician)
          - SQL table alias mapping - musician0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

[DEBUG] 2018-02-11 02:25:30.993 [main] EntityLoader - Static select for entity entity.Musician [PESSIMISTIC_FORCE_INCREMENT]: select musician0_.id as id1_0_0_, musician0_.first_name as first_na2_0_0_, musician0_.last_name as last_nam3_0_0_, musician0_.phone_number as phone_nu4_0_0_ from Musician musician0_ where musician0_.id=? for update
[DEBUG] 2018-02-11 02:25:30.994 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1d2644e3]
[DEBUG] 2018-02-11 02:25:30.994 [main] MetamodelGraphWalker - Visiting attribute path : firstName
[DEBUG] 2018-02-11 02:25:30.994 [main] MetamodelGraphWalker - Visiting attribute path : lastName
[DEBUG] 2018-02-11 02:25:30.994 [main] MetamodelGraphWalker - Visiting attribute path : phoneNumber
[DEBUG] 2018-02-11 02:25:30.994 [main] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2018-02-11 02:25:30.994 [main] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2018-02-11 02:25:30.995 [main] LoadPlanTreePrinter - LoadPlan(entity=entity.Musician)
    - Returns
       - EntityReturnImpl(entity=entity.Musician, querySpaceUid=<gen:0>, path=entity.Musician)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=entity.Musician)
          - SQL table alias mapping - musician0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

[DEBUG] 2018-02-11 02:25:30.995 [main] EntityLoader - Static select for entity entity.Musician [OPTIMISTIC]: select musician0_.id as id1_0_0_, musician0_.first_name as first_na2_0_0_, musician0_.last_name as last_nam3_0_0_, musician0_.phone_number as phone_nu4_0_0_ from Musician musician0_ where musician0_.id=?
[DEBUG] 2018-02-11 02:25:30.995 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@602c4656]
[DEBUG] 2018-02-11 02:25:30.995 [main] MetamodelGraphWalker - Visiting attribute path : firstName
[DEBUG] 2018-02-11 02:25:30.995 [main] MetamodelGraphWalker - Visiting attribute path : lastName
[DEBUG] 2018-02-11 02:25:30.995 [main] MetamodelGraphWalker - Visiting attribute path : phoneNumber
[DEBUG] 2018-02-11 02:25:30.995 [main] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2018-02-11 02:25:30.996 [main] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2018-02-11 02:25:30.996 [main] LoadPlanTreePrinter - LoadPlan(entity=entity.Musician)
    - Returns
       - EntityReturnImpl(entity=entity.Musician, querySpaceUid=<gen:0>, path=entity.Musician)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=entity.Musician)
          - SQL table alias mapping - musician0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

[DEBUG] 2018-02-11 02:25:30.997 [main] EntityLoader - Static select for entity entity.Musician [OPTIMISTIC_FORCE_INCREMENT]: select musician0_.id as id1_0_0_, musician0_.first_name as first_na2_0_0_, musician0_.last_name as last_nam3_0_0_, musician0_.phone_number as phone_nu4_0_0_ from Musician musician0_ where musician0_.id=?
[DEBUG] 2018-02-11 02:25:30.997 [main] Loader - Static select for action ACTION_MERGE on entity entity.Musician: select musician0_.id as id1_0_0_, musician0_.first_name as first_na2_0_0_, musician0_.last_name as last_nam3_0_0_, musician0_.phone_number as phone_nu4_0_0_ from Musician musician0_ where musician0_.id=?
[DEBUG] 2018-02-11 02:25:30.997 [main] Loader - Static select for action ACTION_REFRESH on entity entity.Musician: select musician0_.id as id1_0_0_, musician0_.first_name as first_na2_0_0_, musician0_.last_name as last_nam3_0_0_, musician0_.phone_number as phone_nu4_0_0_ from Musician musician0_ where musician0_.id=?
[DEBUG] 2018-02-11 02:25:31.027 [main] SchemaManagementToolCoordinator - No actions specified; doing nothing
[DEBUG] 2018-02-11 02:25:31.027 [main] JtaPlatformInitiator - No JtaPlatform was specified, checking resolver
[DEBUG] 2018-02-11 02:25:31.028 [main] JtaPlatformResolverInitiator - No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
[DEBUG] 2018-02-11 02:25:31.034 [main] StandardJtaPlatformResolver - Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
[DEBUG] 2018-02-11 02:25:31.035 [main] NamedQueryRepository - Checking 0 named HQL queries
[DEBUG] 2018-02-11 02:25:31.036 [main] NamedQueryRepository - Checking 0 named SQL queries
[DEBUG] 2018-02-11 02:25:31.038 [main] SessionFactoryRegistry - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@49096b06
[DEBUG] 2018-02-11 02:25:31.040 [main] SessionFactoryRegistry - Registering SessionFactory: f8649ce2-3568-4886-9f02-e8d1087349cc (<unnamed>)
[DEBUG] 2018-02-11 02:25:31.040 [main] SessionFactoryRegistry - Not binding SessionFactory to JNDI, no JNDI name configured
[DEBUG] 2018-02-11 02:25:31.156 [main] StatisticsInitiator - Statistics initialized [enabled=false]
[DEBUG] 2018-02-11 02:25:31.190 [main] SQL - select musician0_.id as id1_0_0_, musician0_.first_name as first_na2_0_0_, musician0_.last_name as last_nam3_0_0_, musician0_.phone_number as phone_nu4_0_0_ from Musician musician0_ where musician0_.id=?
[DEBUG] 2018-02-11 02:25:31.225 [main] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2018-02-11 02:25:31.226 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2018-02-11 02:25:31.241 [main] TwoPhaseLoad - Resolving associations for [entity.Musician#1]
[DEBUG] 2018-02-11 02:25:31.246 [main] TwoPhaseLoad - Done materializing entity [entity.Musician#1]
[DEBUG] 2018-02-11 02:25:31.246 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2018-02-11 02:25:31.247 [main] AbstractLoadPlanBasedEntityLoader - Done entity load : entity.Musician#1
[DEBUG] 2018-02-11 02:25:31.247 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2018-02-11 02:25:31.253 [main] TransactionImpl - begin
[DEBUG] 2018-02-11 02:25:31.267 [main] TransactionImpl - committing
[DEBUG] 2018-02-11 02:25:31.268 [main] AbstractFlushingEventListener - Processing flush-time cascades
[DEBUG] 2018-02-11 02:25:31.268 [main] AbstractFlushingEventListener - Dirty checking collections
[DEBUG] 2018-02-11 02:25:31.270 [main] AbstractFlushingEventListener - Flushed: 0 insertions, 0 updates, 1 deletions to 1 objects
[DEBUG] 2018-02-11 02:25:31.270 [main] AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[DEBUG] 2018-02-11 02:25:31.272 [main] EntityPrinter - Listing entities:
[DEBUG] 2018-02-11 02:25:31.272 [main] EntityPrinter - entity.Musician{firstName=Sean, lastName=Kleve, phoneNumber=440-123-1234, id=1}
[DEBUG] 2018-02-11 02:25:31.284 [main] SQL - delete from Musician where id=?
[DEBUG] 2018-02-11 02:25:31.293 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2018-02-11 02:25:31.294 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2018-02-11 02:25:31.294 [main] JdbcCoordinatorImpl - HHH000420: Closing un-released batch
[DEBUG] 2018-02-11 02:25:31.295 [main] SQL - select musician0_.id as id1_0_0_, musician0_.first_name as first_na2_0_0_, musician0_.last_name as last_nam3_0_0_, musician0_.phone_number as phone_nu4_0_0_ from Musician musician0_ where musician0_.id=?
[DEBUG] 2018-02-11 02:25:31.297 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2018-02-11 02:25:31.297 [main] AbstractLoadPlanBasedEntityLoader - Done entity load : entity.Musician#1
[DEBUG] 2018-02-11 02:25:31.297 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2018-02-11 02:25:31.361 [main] CriteriaQueryImpl - Rendered criteria query -> select generatedAlias0 from Musician as generatedAlias0 where generatedAlias0.lastName=:param0
[DEBUG] 2018-02-11 02:25:31.384 [main] QueryTranslatorFactoryInitiator - QueryTranslatorFactory : org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory@7435a578
[INFO ] 2018-02-11 02:25:31.384 [main] QueryTranslatorFactoryInitiator - HHH000397: Using ASTQueryTranslatorFactory
[DEBUG] 2018-02-11 02:25:31.441 [main] QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from entity.Musician as generatedAlias0 where generatedAlias0.lastName=:param0
[DEBUG] 2018-02-11 02:25:31.453 [main] ErrorCounter - throwQueryException() : no errors
[DEBUG] 2018-02-11 02:25:31.456 [main] QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[IDENT] Node: 'entity'
    |  |     |  \-[IDENT] Node: 'Musician'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'lastName'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'param0'

[DEBUG] 2018-02-11 02:25:31.496 [main] HqlSqlBaseWalker - select << begin [level=1, statement=select]
[DEBUG] 2018-02-11 02:25:31.520 [main] FromElement - FromClause{level=1} : entity.Musician (generatedAlias0) -> musician0_
[DEBUG] 2018-02-11 02:25:31.522 [main] FromReferenceNode - Resolved : generatedAlias0 -> musician0_.id
[DEBUG] 2018-02-11 02:25:31.527 [main] FromReferenceNode - Resolved : generatedAlias0 -> musician0_.id
[DEBUG] 2018-02-11 02:25:31.528 [main] DotNode - getDataType() : lastName -> org.hibernate.type.StringType@55cf0d14
[DEBUG] 2018-02-11 02:25:31.530 [main] FromReferenceNode - Resolved : generatedAlias0.lastName -> musician0_.last_name
[DEBUG] 2018-02-11 02:25:31.533 [main] HqlSqlBaseWalker - select : finishing up [level=1, statement=select]
[DEBUG] 2018-02-11 02:25:31.533 [main] HqlSqlWalker - processQuery() :  ( SELECT ( {select clause} musician0_.id ) ( FromClause{level=1} Musician musician0_ ) ( where ( = ( musician0_.last_name musician0_.id lastName ) ? ) ) )
[DEBUG] 2018-02-11 02:25:31.653 [main] JoinProcessor - Using FROM fragment [Musician musician0_]
[DEBUG] 2018-02-11 02:25:31.654 [main] HqlSqlBaseWalker - select >> end [level=1, statement=select]
[DEBUG] 2018-02-11 02:25:31.655 [main] QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (Musician)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'musician0_.id as id1_0_' {alias=generatedAlias0, className=entity.Musician, tableAlias=musician0_}
    |  \-[SQL_TOKEN] SqlFragment: 'musician0_.first_name as first_na2_0_, musician0_.last_name as last_nam3_0_, musician0_.phone_number as phone_nu4_0_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[musician0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'Musician musician0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=Musician,tableAlias=musician0_,origin=null,columns={,className=entity.Musician}}
    \-[WHERE] SqlNode: 'where'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'musician0_.last_name' {propertyName=lastName,dereferenceType=PRIMITIVE,getPropertyPath=lastName,path=generatedAlias0.lastName,tableAlias=musician0_,className=entity.Musician,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'musician0_.id' {alias=generatedAlias0, className=entity.Musician, tableAlias=musician0_}
          |  \-[IDENT] IdentNode: 'lastName' {originalText=lastName}
          \-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.StringType@55cf0d14}

[DEBUG] 2018-02-11 02:25:31.655 [main] ErrorCounter - throwQueryException() : no errors
[DEBUG] 2018-02-11 02:25:31.663 [main] QueryTranslatorImpl - HQL: select generatedAlias0 from entity.Musician as generatedAlias0 where generatedAlias0.lastName=:param0
[DEBUG] 2018-02-11 02:25:31.663 [main] QueryTranslatorImpl - SQL: select musician0_.id as id1_0_, musician0_.first_name as first_na2_0_, musician0_.last_name as last_nam3_0_, musician0_.phone_number as phone_nu4_0_ from Musician musician0_ where musician0_.last_name=?
[DEBUG] 2018-02-11 02:25:31.663 [main] ErrorCounter - throwQueryException() : no errors
[DEBUG] 2018-02-11 02:25:31.687 [main] SQL - select musician0_.id as id1_0_, musician0_.first_name as first_na2_0_, musician0_.last_name as last_nam3_0_, musician0_.phone_number as phone_nu4_0_ from Musician musician0_ where musician0_.last_name=?
[DEBUG] 2018-02-11 02:25:31.691 [main] Loader - Result set row: 0
[DEBUG] 2018-02-11 02:25:31.692 [main] Loader - Result row: EntityKey[entity.Musician#1]
[DEBUG] 2018-02-11 02:25:31.693 [main] TwoPhaseLoad - Resolving associations for [entity.Musician#1]
[DEBUG] 2018-02-11 02:25:31.693 [main] TwoPhaseLoad - Done materializing entity [entity.Musician#1]
[DEBUG] 2018-02-11 02:25:31.697 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2018-02-11 02:25:31.719 [main] SQL - select musician0_.id as id1_0_0_, musician0_.first_name as first_na2_0_0_, musician0_.last_name as last_nam3_0_0_, musician0_.phone_number as phone_nu4_0_0_ from Musician musician0_ where musician0_.id=?
[DEBUG] 2018-02-11 02:25:31.721 [main] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2018-02-11 02:25:31.721 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2018-02-11 02:25:31.722 [main] TwoPhaseLoad - Resolving associations for [entity.Musician#2]
[DEBUG] 2018-02-11 02:25:31.722 [main] TwoPhaseLoad - Done materializing entity [entity.Musician#2]
[DEBUG] 2018-02-11 02:25:31.722 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2018-02-11 02:25:31.722 [main] AbstractLoadPlanBasedEntityLoader - Done entity load : entity.Musician#2
[DEBUG] 2018-02-11 02:25:31.723 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2018-02-11 02:25:31.724 [main] TransactionImpl - begin
[DEBUG] 2018-02-11 02:25:31.726 [main] TransactionImpl - committing
[DEBUG] 2018-02-11 02:25:31.726 [main] AbstractFlushingEventListener - Processing flush-time cascades
[DEBUG] 2018-02-11 02:25:31.726 [main] AbstractFlushingEventListener - Dirty checking collections
[DEBUG] 2018-02-11 02:25:31.728 [main] AbstractFlushingEventListener - Flushed: 0 insertions, 1 updates, 0 deletions to 1 objects
[DEBUG] 2018-02-11 02:25:31.729 [main] AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[DEBUG] 2018-02-11 02:25:31.729 [main] EntityPrinter - Listing entities:
[DEBUG] 2018-02-11 02:25:31.729 [main] EntityPrinter - entity.Musician{firstName=Matthew, lastName=testing, phoneNumber=123-123-1234, id=2}
[DEBUG] 2018-02-11 02:25:31.729 [main] SQL - update Musician set first_name=?, last_name=?, phone_number=? where id=?
[DEBUG] 2018-02-11 02:25:31.731 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2018-02-11 02:25:31.732 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2018-02-11 02:25:31.732 [main] JdbcCoordinatorImpl - HHH000420: Closing un-released batch
[DEBUG] 2018-02-11 02:25:31.732 [main] SQL - select musician0_.id as id1_0_0_, musician0_.first_name as first_na2_0_0_, musician0_.last_name as last_nam3_0_0_, musician0_.phone_number as phone_nu4_0_0_ from Musician musician0_ where musician0_.id=?
[DEBUG] 2018-02-11 02:25:31.734 [main] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2018-02-11 02:25:31.734 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2018-02-11 02:25:31.735 [main] TwoPhaseLoad - Resolving associations for [entity.Musician#2]
[DEBUG] 2018-02-11 02:25:31.735 [main] TwoPhaseLoad - Done materializing entity [entity.Musician#2]
[DEBUG] 2018-02-11 02:25:31.735 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2018-02-11 02:25:31.735 [main] AbstractLoadPlanBasedEntityLoader - Done entity load : entity.Musician#2
[DEBUG] 2018-02-11 02:25:31.735 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2018-02-11 02:25:31.755 [main] CriteriaQueryImpl - Rendered criteria query -> select generatedAlias0 from Musician as generatedAlias0
[DEBUG] 2018-02-11 02:25:31.755 [main] QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from entity.Musician as generatedAlias0
[DEBUG] 2018-02-11 02:25:31.756 [main] ErrorCounter - throwQueryException() : no errors
[DEBUG] 2018-02-11 02:25:31.757 [main] QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    \-[SELECT_FROM] Node: 'SELECT_FROM'
       +-[FROM] Node: 'from'
       |  \-[RANGE] Node: 'RANGE'
       |     +-[DOT] Node: '.'
       |     |  +-[IDENT] Node: 'entity'
       |     |  \-[IDENT] Node: 'Musician'
       |     \-[ALIAS] Node: 'generatedAlias0'
       \-[SELECT] Node: 'select'
          \-[IDENT] Node: 'generatedAlias0'

[DEBUG] 2018-02-11 02:25:31.757 [main] HqlSqlBaseWalker - select << begin [level=1, statement=select]
[DEBUG] 2018-02-11 02:25:31.757 [main] FromElement - FromClause{level=1} : entity.Musician (generatedAlias0) -> musician0_
[DEBUG] 2018-02-11 02:25:31.758 [main] FromReferenceNode - Resolved : generatedAlias0 -> musician0_.id
[DEBUG] 2018-02-11 02:25:31.758 [main] HqlSqlBaseWalker - select : finishing up [level=1, statement=select]
[DEBUG] 2018-02-11 02:25:31.758 [main] HqlSqlWalker - processQuery() :  ( SELECT ( {select clause} musician0_.id ) ( FromClause{level=1} Musician musician0_ ) )
[DEBUG] 2018-02-11 02:25:31.759 [main] JoinProcessor - Using FROM fragment [Musician musician0_]
[DEBUG] 2018-02-11 02:25:31.759 [main] HqlSqlBaseWalker - select >> end [level=1, statement=select]
[DEBUG] 2018-02-11 02:25:31.759 [main] QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (Musician)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'musician0_.id as id1_0_' {alias=generatedAlias0, className=entity.Musician, tableAlias=musician0_}
    |  \-[SQL_TOKEN] SqlFragment: 'musician0_.first_name as first_na2_0_, musician0_.last_name as last_nam3_0_, musician0_.phone_number as phone_nu4_0_'
    \-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[musician0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
       \-[FROM_FRAGMENT] FromElement: 'Musician musician0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=Musician,tableAlias=musician0_,origin=null,columns={,className=entity.Musician}}

[DEBUG] 2018-02-11 02:25:31.759 [main] ErrorCounter - throwQueryException() : no errors
[DEBUG] 2018-02-11 02:25:31.759 [main] QueryTranslatorImpl - HQL: select generatedAlias0 from entity.Musician as generatedAlias0
[DEBUG] 2018-02-11 02:25:31.760 [main] QueryTranslatorImpl - SQL: select musician0_.id as id1_0_, musician0_.first_name as first_na2_0_, musician0_.last_name as last_nam3_0_, musician0_.phone_number as phone_nu4_0_ from Musician musician0_
[DEBUG] 2018-02-11 02:25:31.760 [main] ErrorCounter - throwQueryException() : no errors
[DEBUG] 2018-02-11 02:25:31.760 [main] SQL - select musician0_.id as id1_0_, musician0_.first_name as first_na2_0_, musician0_.last_name as last_nam3_0_, musician0_.phone_number as phone_nu4_0_ from Musician musician0_
[DEBUG] 2018-02-11 02:25:31.762 [main] Loader - Result set row: 0
[DEBUG] 2018-02-11 02:25:31.762 [main] Loader - Result row: EntityKey[entity.Musician#1]
[DEBUG] 2018-02-11 02:25:31.763 [main] Loader - Result set row: 1
[DEBUG] 2018-02-11 02:25:31.763 [main] Loader - Result row: EntityKey[entity.Musician#2]
[DEBUG] 2018-02-11 02:25:31.763 [main] Loader - Result set row: 2
[DEBUG] 2018-02-11 02:25:31.763 [main] Loader - Result row: EntityKey[entity.Musician#3]
[DEBUG] 2018-02-11 02:25:31.763 [main] Loader - Result set row: 3
[DEBUG] 2018-02-11 02:25:31.764 [main] Loader - Result row: EntityKey[entity.Musician#4]
[DEBUG] 2018-02-11 02:25:31.764 [main] TwoPhaseLoad - Resolving associations for [entity.Musician#1]
[DEBUG] 2018-02-11 02:25:31.764 [main] TwoPhaseLoad - Done materializing entity [entity.Musician#1]
[DEBUG] 2018-02-11 02:25:31.764 [main] TwoPhaseLoad - Resolving associations for [entity.Musician#2]
[DEBUG] 2018-02-11 02:25:31.764 [main] TwoPhaseLoad - Done materializing entity [entity.Musician#2]
[DEBUG] 2018-02-11 02:25:31.765 [main] TwoPhaseLoad - Resolving associations for [entity.Musician#3]
[DEBUG] 2018-02-11 02:25:31.765 [main] TwoPhaseLoad - Done materializing entity [entity.Musician#3]
[DEBUG] 2018-02-11 02:25:31.765 [main] TwoPhaseLoad - Resolving associations for [entity.Musician#4]
[DEBUG] 2018-02-11 02:25:31.765 [main] TwoPhaseLoad - Done materializing entity [entity.Musician#4]
[DEBUG] 2018-02-11 02:25:31.765 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2018-02-11 02:25:31.782 [main] CriteriaQueryImpl - Rendered criteria query -> select generatedAlias0 from Musician as generatedAlias0 where generatedAlias0.lastName like :param0
[DEBUG] 2018-02-11 02:25:31.783 [main] QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from entity.Musician as generatedAlias0 where generatedAlias0.lastName like :param0
[DEBUG] 2018-02-11 02:25:31.785 [main] ErrorCounter - throwQueryException() : no errors
[DEBUG] 2018-02-11 02:25:31.786 [main] QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[IDENT] Node: 'entity'
    |  |     |  \-[IDENT] Node: 'Musician'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[LIKE] Node: 'like'
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'lastName'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'param0'

[DEBUG] 2018-02-11 02:25:31.786 [main] HqlSqlBaseWalker - select << begin [level=1, statement=select]
[DEBUG] 2018-02-11 02:25:31.786 [main] FromElement - FromClause{level=1} : entity.Musician (generatedAlias0) -> musician0_
[DEBUG] 2018-02-11 02:25:31.786 [main] FromReferenceNode - Resolved : generatedAlias0 -> musician0_.id
[DEBUG] 2018-02-11 02:25:31.787 [main] FromReferenceNode - Resolved : generatedAlias0 -> musician0_.id
[DEBUG] 2018-02-11 02:25:31.787 [main] DotNode - getDataType() : lastName -> org.hibernate.type.StringType@55cf0d14
[DEBUG] 2018-02-11 02:25:31.787 [main] FromReferenceNode - Resolved : generatedAlias0.lastName -> musician0_.last_name
[DEBUG] 2018-02-11 02:25:31.787 [main] HqlSqlBaseWalker - select : finishing up [level=1, statement=select]
[DEBUG] 2018-02-11 02:25:31.787 [main] HqlSqlWalker - processQuery() :  ( SELECT ( {select clause} musician0_.id ) ( FromClause{level=1} Musician musician0_ ) ( where ( like ( musician0_.last_name musician0_.id lastName ) ? ) ) )
[DEBUG] 2018-02-11 02:25:31.788 [main] JoinProcessor - Using FROM fragment [Musician musician0_]
[DEBUG] 2018-02-11 02:25:31.788 [main] HqlSqlBaseWalker - select >> end [level=1, statement=select]
[DEBUG] 2018-02-11 02:25:31.788 [main] QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (Musician)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'musician0_.id as id1_0_' {alias=generatedAlias0, className=entity.Musician, tableAlias=musician0_}
    |  \-[SQL_TOKEN] SqlFragment: 'musician0_.first_name as first_na2_0_, musician0_.last_name as last_nam3_0_, musician0_.phone_number as phone_nu4_0_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[musician0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'Musician musician0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=Musician,tableAlias=musician0_,origin=null,columns={,className=entity.Musician}}
    \-[WHERE] SqlNode: 'where'
       \-[LIKE] BinaryLogicOperatorNode: 'like'
          +-[DOT] DotNode: 'musician0_.last_name' {propertyName=lastName,dereferenceType=PRIMITIVE,getPropertyPath=lastName,path=generatedAlias0.lastName,tableAlias=musician0_,className=entity.Musician,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'musician0_.id' {alias=generatedAlias0, className=entity.Musician, tableAlias=musician0_}
          |  \-[IDENT] IdentNode: 'lastName' {originalText=lastName}
          \-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.StringType@55cf0d14}

[DEBUG] 2018-02-11 02:25:31.789 [main] ErrorCounter - throwQueryException() : no errors
[DEBUG] 2018-02-11 02:25:31.789 [main] QueryTranslatorImpl - HQL: select generatedAlias0 from entity.Musician as generatedAlias0 where generatedAlias0.lastName like :param0
[DEBUG] 2018-02-11 02:25:31.789 [main] QueryTranslatorImpl - SQL: select musician0_.id as id1_0_, musician0_.first_name as first_na2_0_, musician0_.last_name as last_nam3_0_, musician0_.phone_number as phone_nu4_0_ from Musician musician0_ where musician0_.last_name like ?
[DEBUG] 2018-02-11 02:25:31.789 [main] ErrorCounter - throwQueryException() : no errors
[DEBUG] 2018-02-11 02:25:31.790 [main] SQL - select musician0_.id as id1_0_, musician0_.first_name as first_na2_0_, musician0_.last_name as last_nam3_0_, musician0_.phone_number as phone_nu4_0_ from Musician musician0_ where musician0_.last_name like ?
[DEBUG] 2018-02-11 02:25:31.791 [main] Loader - Result set row: 0
[DEBUG] 2018-02-11 02:25:31.792 [main] Loader - Result row: EntityKey[entity.Musician#1]
[DEBUG] 2018-02-11 02:25:31.792 [main] Loader - Result set row: 1
[DEBUG] 2018-02-11 02:25:31.792 [main] Loader - Result row: EntityKey[entity.Musician#2]
[DEBUG] 2018-02-11 02:25:31.792 [main] Loader - Result set row: 2
[DEBUG] 2018-02-11 02:25:31.793 [main] Loader - Result row: EntityKey[entity.Musician#3]
[DEBUG] 2018-02-11 02:25:31.793 [main] Loader - Result set row: 3
[DEBUG] 2018-02-11 02:25:31.793 [main] Loader - Result row: EntityKey[entity.Musician#4]
[DEBUG] 2018-02-11 02:25:31.793 [main] TwoPhaseLoad - Resolving associations for [entity.Musician#1]
[DEBUG] 2018-02-11 02:25:31.793 [main] TwoPhaseLoad - Done materializing entity [entity.Musician#1]
[DEBUG] 2018-02-11 02:25:31.793 [main] TwoPhaseLoad - Resolving associations for [entity.Musician#2]
[DEBUG] 2018-02-11 02:25:31.793 [main] TwoPhaseLoad - Done materializing entity [entity.Musician#2]
[DEBUG] 2018-02-11 02:25:31.794 [main] TwoPhaseLoad - Resolving associations for [entity.Musician#3]
[DEBUG] 2018-02-11 02:25:31.794 [main] TwoPhaseLoad - Done materializing entity [entity.Musician#3]
[DEBUG] 2018-02-11 02:25:31.794 [main] TwoPhaseLoad - Resolving associations for [entity.Musician#4]
[DEBUG] 2018-02-11 02:25:31.794 [main] TwoPhaseLoad - Done materializing entity [entity.Musician#4]
[DEBUG] 2018-02-11 02:25:31.794 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2018-02-11 02:25:31.808 [main] SQL - select musician0_.id as id1_0_0_, musician0_.first_name as first_na2_0_0_, musician0_.last_name as last_nam3_0_0_, musician0_.phone_number as phone_nu4_0_0_ from Musician musician0_ where musician0_.id=?
[DEBUG] 2018-02-11 02:25:31.813 [main] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2018-02-11 02:25:31.813 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2018-02-11 02:25:31.814 [main] TwoPhaseLoad - Resolving associations for [entity.Musician#1]
[DEBUG] 2018-02-11 02:25:31.814 [main] TwoPhaseLoad - Done materializing entity [entity.Musician#1]
[DEBUG] 2018-02-11 02:25:31.814 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2018-02-11 02:25:31.814 [main] AbstractLoadPlanBasedEntityLoader - Done entity load : entity.Musician#1
[DEBUG] 2018-02-11 02:25:31.814 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
